项目背景：
我研发了一款能感应用户性爱动作的硅胶娃娃下体通道组件，它可以安装在硅胶娃娃体内，让硅胶娃娃的下体通道具备感应用户抽插动作的能力。同时，该组件也包含一个本地运行的单片机程序和语料库，最终能根据用户的抽插动作（包括深度、频率等参数）、体位（通过加速度计和算法，能区分用户的6种性爱体位）、乳房和屁股的拍打或揉捏动作（通过埋入硅胶娃娃相应位置的人体电场感应模块感应），实现了硅胶娃娃仿生语音反馈和通道内夹缩、震动动作的智能化控制。
现在，我需要完善这个项目，让客户们（硅胶娃娃厂商或者最终用户）能够定制自己的语料库，包括角色台词和音色。
目前的语料库是我通过Deepseek撰写的台词，然后通过GPT-SoVITS训练的特殊音色模型将台词文字生成了语音文件。

本项目的目标是：
1、真个项目的操作应该是步骤化的，一步一步引导用户进行流程操作。第一个步骤“角色管理”，用户可以输入“角色名称”和“角色描述”信息，创建新角色。以上两项是创建新角色的必填项目，为方便区分，用户还可以选择角色头像（上传一张图片，选填项目）；
2、用户创建的角色要形成独立的数据库，用户可以对已有角色进行增、删、查、改，用户也可以选择已有角色，然后进入下一步；
3、第二步，“LLM配置”。让用户配置LLM API，要求输入与OpenAI API兼容的URL，要求以“/v1”类似的字符结尾。让用户输入API Key，系统通过URL和API Key获取模型列表形成“选择模型”的下拉菜单。用户选择好模型后，可以选择测试其可用性；
4、用户创建的API URL+API Key+选择模型的配置组合，需要形成单独的数据库进行记录。用户可以从以往的配置中随时选择使用，配置信息可以进行增、删、查、改；
5、系统内部要具备一套固定的语音文件任务列表。你可以参考 产品逻辑.csv 台词.csv 这两个文件，理解产品本身的“感知动作-事件触发-声音文件筛选-声音文件播放”的程序逻辑。在此基础上，可以先用“台词.csv”中的“动作参数”（也就是音频文件文件名）作为固定的语音文件任务列表；
6、第三步，“生成台词”。现在我们已经有了用户指定的角色、LLM API和要生成的语音文件任务列表，具备以上条件后，用户需要选择“台词语言”，选项包括“中文”（默认）、“English”和“日本語”。系统需要把以上信息组织成自然语言的，最好是有固定格式（比如json）的提示词，用于让LLM按照一定格式的生成台词内容。提示词需要让LLM首先理解语音文件任务列表中的每一个文件名对应的是什么具体台词要求，然后理解为什么角色在创作台词，还要理解用什么语言输出台词；
7、自动在“output”文件夹中建立以“角色名称”命名的子文件夹，LLM输出的台词要在对应角色的子文件夹中建立CSV文件，文件内容时“动作参数”（也就是未来的音频文件文件名）和所对应的“台词”文字。CSV文件文件名由日期+时间数字自动生成。每个文件夹内可以有多个CSV文件。WebUI中，CSV表格直接呈现，而且在LLM生成台词的过程中动态更新WebUI中的表格，让LLM所生成的台词文字，实时出现在WebUI上。在WebUI的表格上，用户可以手动修改台词，也可以指定某一条或多条台词重新生成并覆盖之前内容。这需要UI能让用户做表格项目的选择，这样才能让“重新生成”操作有对应的目标。最终，用户在WebUI上编辑好的表格，可以存档覆盖原CSV文件或新的CSV文件。WebUI中有下拉菜单呈现当前角色的已有CSV文件。用户可以选择以往的CSV文件并在WebUI中打开编辑，将当前的整套台词输出为csv格式的表格。WebUI中有“导入”按键，用户可以选择其它符合本步骤表格要求的csv文件，导入到当前角色名下。WebUI中加入“LLM通讯状态”窗口，滚动显示当前跟LLM通讯的内容，内容来自”终端“窗口。WebUI中加入”当前提示词“窗口，显示当前提示词工程生成的，发送给LLM的提示词内容。些都在第三步，“生成台词”中呈现和操作；
8、选定成套的台词后，可以进入第四步，“语音生成”。在项目内部署GPT-SoVITS 2 Pro，根据GPT-SoVITS的特性，用户可以挑选预训练的VoiceID，可以选择或不选择参考音频，对成套的台词进行语音文件生成。系统要形成任务列表，让TTS逐个生成台词，并呈现台词列表，让用户实时看到正在生成哪条台词、已经生成了哪些台词。用户可以点击已经生成好的台词项目进行预览收听，同时只播放一条音频文件；也可以实时的，对不满意的已经生成的台词项目进行再次生成要求，再次生成的任务会自动排队到任务列表的末端。
9、语音生成列表任务完成后，用户可以选择“导出语音包”，所有声音文件以48Khz,16bit,单声道，wav格式，以“动作参数”作为文件名输出成单个音频文件。自动生成“greeting”、“orgasm”、“reaction”、“tease”、“impact”、“touch”文件夹，并把相应的wav文件放入文件夹中；最终以当前角色的“角色名称”形成总文件夹，包含所有以上的文件和文件夹，并zip压缩打包，供用户下载。整理文件和压缩的过程，界面上需要给出提示，最好是进度条提示。压缩打包完成后，自动开始下载；
10、以上为整个项目的操作流程和功能需求介绍，项目使用Gradio组件构建WebUI界面。

注意：
永远不要打开--share参数！
当我们提到“用户选择文件”时，是指调用Gradio组件中用户拖拽或点击弹出文件选择窗口的插件，而不是让用户输入文件名的输入框！
尽量使用标准的Gradio组件来组建页面。